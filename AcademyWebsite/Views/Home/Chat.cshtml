<input id="userInput" type="text" placeholder="Username" />
<input id="messageInput" type="text" placeholder="Message" />
<button onclick="sendMessage()">Send</button>

<div id="messagesList"></div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script type="text/javascript">
    // Establish connection to SignalR Hub
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    // Define client-side function to receive new messages
    connection.on("ReceiveMessage", (user, message, timestamp) => {
        displayMessage(user, message, timestamp);
    });

    // Handle receiving previous messages without the date-time
    connection.on("LoadMessages", function (messages) {
        const messagesList = document.getElementById("messagesList");
        messagesList.innerHTML = "";

        if (messages && messages.length > 0) {
            messages.forEach(message => {
                console.log("Received message:", message);
                displayMessageWithoutDate(message.user, message.text);
            });
        } else {
            console.log("No messages received.");
        }
    });

    function displayMessageWithoutDate(user, message) {
        const msg = document.createElement("div");
        msg.textContent = `${user}: ${message}`; 
        document.getElementById("messagesList").appendChild(msg);
    }


    // Start the connection and handle loading messages after successful connection
    connection.start()
        .then(() => {
            console.log("Connection started");
            connection.invoke("LoadMessages").catch(err => console.error("Error loading messages:", err.toString()));
        })
        .catch(err => console.error("Error starting connection:", err.toString()));

    // Function to send message
    function sendMessage() {
        const user = document.getElementById("userInput").value;
        const message = document.getElementById("messageInput").value;

        if (user.trim() === "" || message.trim() === "") {
            alert("Please enter both username and message.");
            return;
        }

        connection.invoke("SendMessage", user, message)
            .catch(err => console.error("Error sending message:", err.toString()));
    }
</script>
