@model IEnumerable<Course>

<div class="container">
    <h2 class="text-center mb-4">Courses</h2>

    @if (User.IsInRole("Manager") || User.IsInRole("Admin"))
    {
        <a asp-action="Add" class="btn btn-primary mb-3">Add New Course</a>
    }

    <div class="row">
        @if (Model != null && Model.Any())
        {
            foreach (var course in Model)
            {
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <img src="@course.ImageUrl" alt="@course.Name" class="card-img-top" style="max-height: 200px; object-fit: cover;">

                        <div class="card-header">
                            <h4>@course.Name</h4>
                        </div>

                        <div class="card-body">
                            <p><strong>Details:</strong> @course.Details</p>
                            <p><strong>Price:</strong> @course.Price</p>
                            <p class="course-timer" id="timer-@course.Id" data-start="@course.StartDate" data-end="@course.EndDate"></p>
                        </div>

                        <div class="card-footer text-right">
                            @if (User.IsInRole("Manager") || User.IsInRole("Admin"))
                            {
                                <a asp-action="Edit" asp-route-id="@course.Id" class="btn btn-warning btn-sm">Edit</a>
                                <a asp-action="Delete" asp-route-id="@course.Id" class="btn btn-danger btn-sm">Delete</a>
                            }
                            @if (User.Identity.IsAuthenticated)
                            {
                                <a asp-action="Join" asp-route-id="@course.Id" class="btn btn-success btn-sm">Enroll a Child</a>
                            }
                            <a asp-action="Details" asp-route-id="@course.Id" class="btn btn-primary btn-sm">Details</a>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12">
                <div class="alert alert-warning text-center" role="alert">
                    No courses available.
                </div>
            </div>
        }
    </div>
</div>

<script>
    function formatTime(ms) {
        var d = Math.floor(ms / (1000 * 60 * 60 * 24));
        var h = Math.floor((ms % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var m = Math.floor((ms % (1000 * 60 * 60)) / (1000 * 60));
        var s = Math.floor((ms % (1000 * 60)) / 1000);
        return d + 'd ' + h + 'h ' + m + 'm ' + s + 's';
    }

    function updateCourseTimers() {
        var courses = document.querySelectorAll('.course-timer');
        courses.forEach(function (course) {
            var startDate = new Date(course.getAttribute('data-start'));
            var endDate = new Date(course.getAttribute('data-end'));
            var now = new Date();

            var timeToStart = startDate - now;
            var timeToEnd = endDate - now;

            if (timeToStart > 0) {
                course.innerHTML = 'Starts in: ' + formatTime(timeToStart);
                course.style.color = 'green';
            } else if (timeToEnd > 0) {
                course.innerHTML = 'Ongoing, ends in: ' + formatTime(timeToEnd);
                course.style.color = 'orange'; 
            } else {
                course.innerHTML = 'Course ended.';
                course.style.color = 'red'; 
            }
        });
    }

    setInterval(updateCourseTimers, 1000);

    updateCourseTimers();
</script>
